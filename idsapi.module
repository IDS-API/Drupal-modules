<?php
// $Id$

/**
 * @file
 *  IDS API Module.
 *
 * This module uses the IDS Knowldege Services API (api.ids.ac.uk) in order
 * to search, display and import data and metadata contained in the BRIDGE and ELDIS
 * datasets, which are maintained by the IDS.
 */

/* --------------------- Hooks implementations -------------------- */

/**
 * Include files that implement the request and objects classes
 */
require_once('idsapi.default.inc');
require_once('idsapi.request.inc');
require_once('idsapi.response.inc');
require_once('idsapi.object.inc');

/**
 * Implements hook_flush_caches().
 */
function idsapi_flush_caches() {
  return array('idsapi_cache');
}

/**
 * Implements hook_enable().
 */
function idsapi_enable() {
    drupal_flush_all_caches();
    drupal_set_message(t('To use the IDS API module, first go to the <a href="@url">IDS API Administration</a> to set general parameters, including your IDS API key.', array('@url' => url('admin/config/services/idsapi'))));
}

/**
 * Implements hook_disable().
 */
function idsapi_disable() {
    // TODO Disable global variables
    drupal_flush_all_caches();
}

/**
 * Implements of hook_menu().
 */
function idsapi_menu() {
  $items = array();

  $items['admin/config/services/idsapi'] = array(
    'title' => t('IDS API Module settings'),
    'description' => t('Global settings for the IDS API module.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('idsapi_settings_form'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer idsapi'),
    'file' => 'idsapi.admin.inc',
  );
  
  return $items;
}

/**
 * Implements hook_permission().
 */
function idsapi_permission() {
  return array(
    'administer my module' => array(
      'title' => t('Administer the IDS API module'), 
      'description' => t('Perform administration tasks for the IDS API module.'),
    ),
  );
}
 
/**
 * Implements hook_help().
 */
function idsapi_help($path, $arg) {
  if ($path == 'admin/help#idsapi') {
    return t('Uses the IDS API to provide access to Eldis and Bridge content. API documentation: ') . IDS_API_DOCUMENTATION_URL;
  }
}

/* ---------------- Examples of calls to the IDS API --------------- */

/**
 * Implements hook_block_info().
 */
function idsapi_block_info() {
  $blocks = array();
  
  $blocks['idsapi_eldis_documents'] = array(
    'info' => t('Eldis documents'),
    'cache' => DRUPAL_NO_CACHE,
  );
  
  $blocks['idsapi_eldis_organisations'] = array(
    'info' => t('Eldis organisations'),
    'cache' => DRUPAL_NO_CACHE,
  );
  
  $blocks['idsapi_bridge_documents'] = array(
    'info' => t('Bridge documents'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function idsapi_block_view($block_name = '') {

  $block = array();
  $content = '';

  // Retrieves latest Eldis documents
  if ($block_name == 'idsapi_eldis_documents') {
    $response = idsapi_get_all('documents', 'eldis', 'full');
    $items = $response->htmlShortListObjects();
    if (is_array($items)) {
      $theme_args = array('items' => $items, 'type' => 'ol');
      $content = theme('item_list', $theme_args);
    }
    else  {
      $content = theme('help', 'Error when recovering block content.');
    }
    $block['subject'] = t('Eldis recent documents');
  }
  
  // Retrieves latest Eldis organisations
  if ($block_name == 'idsapi_eldis_organisations') {
    $response = idsapi_get_all('organisations', 'eldis', 'full');
    $items = $response->htmlShortListObjects();
    if (is_array($items)) {
      $theme_args = array('items' => $items, 'type' => 'ol');
      $content = theme('item_list', $theme_args);
    }
    else  {
      $content = theme('help', 'Error when recovering block content.');
    }
    $block['subject'] = t('Eldis latest organisations');
  }
  
    // Retrieves latest Bridge documents
  if ($block_name == 'idsapi_bridge_documents') {
    $response = idsapi_get_all('documents', 'bridge', 'full');
    $items = $response->htmlShortListObjects();
    if (is_array($items)) {
      $theme_args = array('items' => $items, 'type' => 'ol');
      $content = theme('item_list', $theme_args);
    }
    else  {
      $content = theme('help', 'Error when recovering block content.');
    }
    $block['subject'] = t('Bridge latest documents');
  }

  $block['content'] = $content;

  return $block;

}

/**
 * Function used to retrieve IDS items using get_all.
 */
function idsapi_get_all($type, $set, $format) {
  $request = new IdsApiRequest();
  $request->num_requested = 0;
  $request->type_request = 'get_all';
  $request->object_type = $type;
  $request->format = $format;
  $request->site = $set;
  $response = $request->makeRequest();
  return $response;
}

/**
 * Function used to retrieve IDS items using search, with parameters.
 */
function idsapi_search($type, $set, $format, $params) {
  $request = new IdsApiRequest();
  $request->num_requested = 0;
  $request->type_request = 'search';
  $request->object_type = $type;
  $request->format = $format;
  $request->site = $set;
  if ($params) {
    foreach ($params as $key => $value) {
      $request->setSearchParam($key, $value);
    }
  }
  $response = $request->makeRequest();
  return $response;
}










